@model wxhy.Models.lycustomer

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>注册客户</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap-select.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-select.min.js"></script>
    <script type="text/javascript" src="~/Scripts/i18n/defaults-zh_CN.min.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrapValidator.min.js"></script>
    <script type="text/javascript">
        $(function () {
            var oSelect = new SelectObject();
            var oval = new ValidateObject();
            var oBtn = new BtnObject();
            oval.Init();
            oSelect.Init();
            oBtn.Init();
        });
        var SelectObject = function () {
            var oSelect = new Object();
            oSelect.ProductInit = function () {
                $.ajax({
                    type: "post",
                    url: '/Wx/GetProductsList',
                    success: function (data) {
                        var json = eval(data); //数组
                        $.each(json, function (index, item) {
                            $("#interestproduct").append("<option value='" + json[index].proId + "'>" + json[index].name + "</option>");
                            $('#interestproduct').selectpicker('render');
                            $('#interestproduct').selectpicker('refresh');
                        });
                    },
                    error: function () {

                    },
                    complete: function () {

                    }

                });
            };
            oSelect.StoreInit = function () {
                $.ajax({
                    type: "post",
                    url: '/Wx/GetStoresList',
                    success: function (data) {
                        var json = eval(data); //数组
                        $.each(json, function (index, item) {
                            $("#store").append("<option value='" + json[index].storeId + "'>" + json[index].name + "</option>");
                            $('#store').selectpicker('render');
                            $('#store').selectpicker('refresh');
                            $('#store').selectpicker('val', 9);
                        });
                    },
                    error: function () {

                    },
                    complete: function () {

                    }

                });
            }

            oSelect.Init = function () {
                oSelect.ProductInit();
                oSelect.StoreInit();
            }
            return oSelect;
        }
        var BtnObject = function () {
            var oBtn = new Object();
            oBtn.Init = function () {

                $("form").submit(function () {
                    var cst = {
                        name: $("#name").val(),
                        openid: '@Model.openid',
                        nickname: '@Model.nickname',
                        sex: '@Model.sex',
                        city: '@Model.city',
                        country: '@Model.country',
                        province: '@Model.province',
                        language: '@Model.language',
                        headimgurl: '@Model.headimgurl',
                        subscribetime: '@Model.subscribetime',
                        unionid: '@Model.unionid',
                        remark: '@Model.remark',
                        groupid: '@Model.groupid',
                        tagidlist: '@Model.tagidlist',
                        csttype: '@Model.csttype',
                        address: '@Model.address',
                        store: $("#store option[value='" + $("#store").val() + "']").text(),
                        interestproduct: GetMultiSelectedText("interestproduct"),
                        referees: $("#referees").val(),
                        integral: 100,
                        storeId: $("#store").val(),
                        interestproductIdlist: $("#interestproduct").val().join(","),
                        cell_phonenumber: $("#cell_phonenumber").val()
                    };

                    var bv = $("#RegisterForm").data("bootstrapValidator");
                    var flag = bv.isValid();
                    if (flag)
                    {
                        $('#cstsubmit').attr('onclick', 'javascript:void();');
                        $.ajax({
                            type: "post",
                            url: '/lycustomers/SaveCst',
                            data: { cst: JSON.stringify(cst) },
                            success: function (data) {
                                alert("注册成功");
                                window.location.href = "/lycustomers/RegisterSuccess";
                            },
                            error: function () {

                            },
                            complete: function () {

                            }

                        });
                    }
                    return false;
                });
            }
            return oBtn;
        }

        var ValidateObject = function () {
            var oValidate = new Object();
            oValidate.Init = function () {
                $("#RegisterForm").bootstrapValidator({
                    fields: {/*验证*/
                        name: {/*键名username和input name值对应*/
                            validators: {
                                notEmpty: {/*非空提示*/
                                    message: '姓名不能为空'
                                }
                            }
                        },
                        cell_phonenumber: {
                            validators: {
                                notEmpty: {
                                    message: '手机号不能为空'
                                }
                            }
                        }
                    }
                });
            };
            return oValidate;
        }

        function GetMultiSelectedText(ostr)
        {
            var arr = $("#interestproduct").val();
            var icount = arr.length;
            var str = "";
            for (var i = 0; i < icount; i++) {
                str += ","+ $("#" + ostr + " [value='" + arr[i] + "']").text()
            }
            str.substring(1);
            return str;
        }
    </script>
</head>
<body>
    <form id="RegisterForm">
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            <div class="form-horizontal">
                <h4 class="text-center">注册客户</h4>
                <hr />
                <div class="row">
                    <div class="col-xs-8 col-xs-offset-2">
                        <div class="form-group">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control col-xs-12 col-sm-12", @placeholder = "姓名" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-8 col-xs-offset-2">
                        <div class="form-group">
                            @Html.EditorFor(model => model.cell_phonenumber, new { htmlAttributes = new { @class = "form-control col-xs-12 col-sm-12", @placeholder = "手机号" } })
                            @Html.ValidationMessageFor(model => model.cell_phonenumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-8 col-xs-offset-2">
                        <div class="form-group">
                            <select select id="interestproduct" name="interestproduct" class="selectpicker show-tick form-control" multiple data-live-search="false" placeholder="感兴趣的产品"></select>
                            <small>感兴趣的产品</small>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-8 col-xs-offset-2">
                        <div class="form-group">
                            <select select id="store" name="store" class="selectpicker show-tick form-control" data-live-search="false" placeholder="注册店铺"> </select>
                            <small>注册店铺</small>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-8 col-xs-offset-2">
                        <div class="form-group">
                            @Html.EditorFor(model => model.referees, new { htmlAttributes = new { @class = "form-control col-xs-12 col-sm-12", @placeholder = "推荐人" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-8 col-xs-offset-2">
                        <div class="form-group">
                            <input id="cstsubmit" type="submit" value="保存" class="btn btn-primary col-xs-12 col-sm-12" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</body>
</html>